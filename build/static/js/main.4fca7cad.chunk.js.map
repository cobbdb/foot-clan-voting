{"version":3,"sources":["reducers/rootReducer.js","reducers/socket.js","reducers/toons.js","store.js","socket.js","components/landing/index.jsx","components/nav/Header.jsx","components/dashboard/Option.jsx","actions/index.js","components/dashboard/models.js","components/dashboard/Question.jsx","components/dashboard/index.jsx","components/summary/Poll.jsx","components/summary/index.jsx","components/breakdown/index.jsx","components/SocketLoader.jsx","App.js","index.js"],"names":["history","initialState","open","error","socket","state","arguments","length","undefined","action","type","Object","objectSpread","code","active","facet","records","username","class","reducers_toons","toConsumableArray","toon","i","findIndex","user","createBrowserHistory","middleware","routerMiddleware","store","createStore","persistReducer","key","storage","combineReducers","router","connectRouter","toons","compose","apply","applyMiddleware","concat","persistor","persistStore","Landing","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","dispatch","target","_ref","id","_this2","react_default","a","createElement","className","map","react_router_dom","to","join","onClick","React","PureComponent","connect","Header","exact","index_es","size","flip","icon","faSignOutAlt","faUserCog","faUsers","Dashboard","response","data","body","JSON","stringify","send","setResponse","defineProperty","value","find","Col","lg","Button","block","toLowerCase","children","models","realms","raid","pvp","roles","factions","classes","Row","md","label","option","Option","replace","nav_Header","Question","Poll","counts","total","colors","calculate","handleBreakdown","prevProps","forEach","setState","_this3","faInfoCircle","style","height","keys","name","backgroundColor","ratio","role","width","aria-valuenow","aria-valuemin","aria-valuemax","Summary","summary_Poll","Breakdown","SocketLoader","faBomb","Fragment","Spinner","color","App","client","w3cwebsocket","onerror","console","log","onopen","readyState","OPEN","onclose","event","onmessage","parse","connectSocket","ready","react_router","path","component","components_SocketLoader","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4fca7cad.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport socket from './socket';\nimport toons from './toons';\n\nexport default history => combineReducers({\n  router: connectRouter(history),\n  socket,\n  toons,\n});\n","const initialState = { open: false, error: false };\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'SOCKET_OPEN':\n      return { ...state, open: true, error: false };\n    case 'SOCKET_ERROR':\n      return { ...state, error: action.code, open: false };\n    case 'CLEAR':\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  active: false,\n  facet: false,\n  records: [{\n    username: 'khalilah',\n    class: 'warrior',\n  }, {\n    username: 'fatherhands',\n    class: 'priest',\n  }, {\n    username: 'manthong',\n    class: 'warrior',\n  }, {\n    username: 'shimmer',\n    class: 'mage',\n  }, {\n    username: 'bertholomule',\n    class: 'rogue',\n  }],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BREAKDOWN':\n      return { ...state, facet: action.facet };\n    case 'SELECT_TOON':\n      return { ...state, active: action.username };\n    case 'LOAD_TOON': {\n      const records = [...state.records];\n      const toon = { ...action.toon };\n      const i = records.findIndex(user => user.username === toon.username);\n      records[i] = toon;\n      return { ...state, records };\n    }\n    case 'CLEAR':\n      return { ...initialState, records: state.records };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './reducers/rootReducer';\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\nconst middleware = [routerMiddleware(history)];\nconst enhancers = [];\n\nexport const store = createStore(\n  persistReducer(\n    { key: 'foot-clan-voting', storage },\n    createRootReducer(history),\n  ),\n  initialState,\n  compose(applyMiddleware(...middleware), ...enhancers),\n);\n\nexport const persistor = persistStore(store);\n","import { w3cwebsocket } from 'websocket';\nimport { store } from './store';\n\nexport let socket = false;\n\nexport const connect = () => {\n  const client = new w3cwebsocket('ws://www.dcobb.media:8080/', 'echo-protocol');\n\n  client.onerror = () => {\n    console.log('Connection Error');\n  };\n\n  client.onopen = () => {\n    console.log('WebSocket Client Connected');\n    if (client.readyState === client.OPEN) {\n      store.dispatch({ type: 'SOCKET_OPEN' });\n    }\n  };\n\n  client.onclose = (event) => {\n    console.log('echo-protocol Client Closed');\n    store.dispatch({ type: 'SOCKET_ERROR', code: event.code });\n  };\n\n  client.onmessage = ({ data }) => {\n    if (typeof data === 'string') {\n      const toons = JSON.parse(data);\n      console.log(`Received: ${toons}`);\n      toons.forEach((toon) => {\n        store.dispatch({ type: 'LOAD_TOON', toon });\n      });\n    }\n  };\n\n  socket = client;\n  return client;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Landing extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch({ type: 'CLEAR' });\n  }\n\n  handleClick({ target }) {\n    this.props.dispatch({ type: 'SELECT_TOON', username: target.id });\n  }\n\n  render() {\n    return (\n      <div className=\"vh-100 d-flex justify-content-center align-items-center\">\n        <div className=\"text-center\">\n          <h1 className=\"display-4 text-primary mb-4\">Who Are You?</h1>\n          <div className=\"d-flex flex-column\">\n            {this.props.toons.map(toon => (\n              <Link\n                to=\"/dash\"\n                key={toon.username}\n                id={toon.username}\n                className={[\n                  'btn btn-light btn-lg rounded-sm text-capitalize mb-2',\n                  `text-${toon.username}`,\n                ].join(' ')}\n                onClick={this.handleClick}\n              >\n                {toon.username}\n              </Link>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  toons: store.toons.records,\n}))(Landing);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt, faUsers, faUserCog } from '@fortawesome/free-solid-svg-icons';\n\nclass Header extends React.PureComponent {\n  render() {\n    return (\n      <div id=\"header\" className=\"px-3 bg-secondary d-flex align-items-center\">\n        <NavLink exact to=\"/\" className=\"btn btn-secondary btn-lg rounded-pill\">\n          <FontAwesomeIcon size=\"lg\" flip=\"horizontal\" icon={faSignOutAlt} />\n        </NavLink>\n        <div className=\"w-100 text-center\">\n          <NavLink \n            to=\"/dash\" \n            className={[\n              'btn btn-secondary btn-lg mr-4 rounded-pill text-capitalize',\n              `text-${this.props.username}`,\n            ].join(' ')}\n          >\n            <FontAwesomeIcon icon={faUserCog} className=\"mr-2\" />\n            {this.props.username}\n          </NavLink>\n          <NavLink to=\"/summary\" className=\"btn btn-secondary btn-lg rounded-pill mr-3\">\n            <FontAwesomeIcon icon={faUsers} className=\"mr-2\" />\n            The FETs\n          </NavLink>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  username: store.toons.active,\n}))(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Button } from 'reactstrap';\nimport { setResponse } from '../../actions';\n\nclass Dashboard extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    setResponse(this.props.username, {\n      [this.props.id]: this.props.value,\n    });\n  }\n\n  render() {\n    const user = this.props.toons.find(toon => toon.username === this.props.username);\n    const active = user[this.props.id] === this.props.value;\n\n    return (\n      <Col lg=\"6\">\n        <Button\n          onClick={this.handleClick}\n          className={`option d-flex align-items-center m-0 ${active ? 'active' : ''}`}\n          size=\"lg\"\n          block\n        >\n          <div \n            className={[\n              'mr-2',\n              `${this.props.id}-icon`,\n              this.props.value.toLowerCase(),\n            ].join(' ')} \n          />\n          {this.props.children}\n        </Button>\n      </Col>\n    );\n  }\n}\n\nexport default connect(store => ({\n  toons: store.toons.records,\n  username: store.toons.active,\n}))(Dashboard);\n","import { socket } from '../socket';\n\nexport const setResponse = (username, response) => {\n  const data = { username, ...response };\n  const body = JSON.stringify(data);\n  socket.send(`PUT/USER/${data.username}/${body}`);\n};\n\nexport const getUsers = () => {\n  socket.send('GET/USERS');\n};\n","export const models = {\n  realms: ['PvP', 'PvE'],\n  raid: ['Yes', 'No', 'Maybe'],\n  pvp: ['Yes', 'No', 'Maybe'],\n  roles: ['Tank', 'Healer', 'Melee DPS', 'Ranged DPS'],\n  factions: ['Horde', 'Alliance', 'Nope'],\n  classes: [\n    'Warrior', 'Priest', 'Druid', 'Hunter', 'Shaman', 'Paladin',\n    'Rogue', 'Mage', 'Warlock',\n  ],\n};\n\n/* {\n    Warrior: {\n      dungeon: ['Tank', 'Melee DPS'],\n      raid: ['Tank', 'Melee DPS'],\n      pvp: ['Melee DPS'],\n    },\n    Priest: {\n      dungeon: ['Healer', 'Ranged DPS'],\n      raid: ['Healer'],\n      pvp: ['Ranged DPS'],\n    },\n    Druid: {\n      dungeon: ['Tank', 'Healer', 'Melee DPS', 'Ranged DPS'],\n      raid: [],\n      pvp: ['Healer', 'Melee DPS', 'Ranged DPS'],\n    },\n    Hunter: {\n      dungeon: ['Ranged DPS'],\n      raid: [],\n      pvp: ['Ranged DPS'],\n    },\n    Shaman: {\n      dungeon: ['Healer', 'Tank', 'Melee DPS', 'Ranged DPS'],\n      raid: ['Healer'],\n      pvp: ['Healer', 'Melee DPS', 'Ranged DPS'],\n      faction: 'Horde',\n    },\n    Paladin: {\n      dungeon: ['Healer', 'Tank', 'Melee DPS'],\n      raid: ['Healer'],\n      pvp: ['Healer', 'Melee DPS'],\n      faction: 'Alliance',\n    },\n    Rogue: {\n      dungeon: ['Melee DPS'],\n      raid: ['Melee DPS'],\n      pvp: ['Melee DPS'],\n    },\n    Warlock: {\n      dungeon: ['Ranged DPS'],\n      raid: ['Ranged DPS'],\n      pvp: ['Ranged DPS'],\n    },\n    Mage: {\n      dungeon: ['Ranged DPS'],\n      raid: ['Ranged DPS'],\n      pvp: ['Ranged DPS'],\n    },\n  },\n};\n*/\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\nimport Option from './Option';\nimport { models } from './models';\n\nclass Dashboard extends React.PureComponent {\n  render() {\n    return (\n      <Row className=\"d-flex py-4 border-bottom\">\n        <Col md=\"4\">\n          <h3 className=\"mb-3\">{this.props.label}</h3>\n        </Col>\n        <Col>\n          <Row>\n            {models[this.props.id].map(option => (\n              <Option \n                key={option} \n                id={this.props.id} \n                value={option.toLowerCase().replace(' ', '-')}\n              >\n                {option}\n              </Option>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default connect()(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../nav/Header';\nimport Question from './Question';\n\nclass Dashboard extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"text-white\">\n        <Header />\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"bg-light p-4\">\n            <Question label=\"Realm Type?\" id=\"realms\" />\n            <Question label=\"Want to Raid?\" id=\"raid\" />\n            <Question label=\"Want to PvP?\" id=\"pvp\" />\n            <Question label=\"What about your role?\" id=\"roles\" />\n            <Question label=\"Care about faction?\" id=\"factions\" />\n            <Question label=\"What class are you?\" id=\"classes\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nclass Poll extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { counts: {}, total: 0 };\n    this.colors = [\n      'bg-primary',\n      'bg-info',\n      'bg-secondary',\n      'bg-warning',\n      'bg-dark',\n    ];\n\n    this.calculate = this.calculate.bind(this);\n    this.handleBreakdown = this.handleBreakdown.bind(this);\n  }\n\n  componentDidMount() {\n    this.calculate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.calculate();\n    }\n  }\n\n  calculate() {\n    let total = 0;\n    let counts = {};\n    this.props.toons.forEach((toon) => {\n      const response = toon[this.props.id];\n      if (response) {\n        counts[response] = counts[response] || 0;\n        counts[response] += 1;\n        total += 1;\n      }\n    });\n    this.setState({ counts, total });\n  }\n\n  handleBreakdown() {\n    this.props.dispatch({ type: 'SET_BREAKDOWN', facet: this.props.id });\n  }\n\n  render() {\n    return (\n      <Row className=\"d-flex py-4 border-bottom\">\n        <Col md=\"4\" className=\"d-flex justify-content-between\">\n          <h3 className=\"mb-0\">{this.props.label}</h3>\n          <Link\n            to=\"/breakdown\"\n            className=\"btn btn-light d-flex align-items-center\"\n            onClick={this.handleBreakdown}\n          >\n            <FontAwesomeIcon icon={faInfoCircle} size=\"lg\" />\n          </Link>\n        </Col>\n        <Col>\n          <div className=\"progress font-weight-bold mt-2\" style={{ height: '1.7rem' }}>\n            {Object.keys(this.state.counts).map((name, i) => {\n              if (name === 'undefined') {\n                return '';\n              }\n\n              // const backgroundColor = '#' + Math.floor(Math.random() * 16777215).toString(16);\n              const backgroundColor = this.colors[i];\n              const ratio = this.state.counts[name] / this.state.total * 100;\n              return (\n                <div\n                  key={name}\n                  className={`progress-bar text-capitalize ${backgroundColor}`}\n                  role=\"progressbar\"\n                  style={{ width: `${ratio}%` }} // , backgroundColor }}\n                  aria-valuenow={ratio}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  {name} ({this.state.counts[name]})\n                </div>\n              );\n            })}\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default connect(store => ({\n  toons: store.toons.records,\n  username: store.toons.active,\n}))(Poll);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../nav/Header';\nimport Poll from './Poll';\n\nclass Summary extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"text-white\">\n        <Header />\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"bg-light p-4\">\n            <Poll label=\"Realm Type?\" id=\"realms\" />\n            <Poll label=\"Want to Raid?\" id=\"raid\" />\n            <Poll label=\"Want to PvP?\" id=\"pvp\" />\n            <Poll label=\"What about your role?\" id=\"roles\" />\n            <Poll label=\"Care about faction?\" id=\"factions\" />\n            <Poll label=\"What class are you?\" id=\"classes\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Summary);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\nimport Header from '../nav/Header';\n\nclass Breakdown extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"text-white\">\n        <Header />\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"bg-light p-4\">\n            {this.props.toons.map(toon => (\n              <Row className={`mb-3 text-${toon.username}`}>\n                <Col>\n                  <h3 className=\"text-capitalize text-right\">\n                    {toon.username}:\n                  </h3>\n                </Col>\n                <Col>\n                  <h3 className=\"font-italic\">\n                    {toon[this.props.id]}\n                  </h3>\n                </Col>\n              </Row>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  toons: store.toons.records,\n  id: store.toons.facet,\n}))(Breakdown);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBomb } from '@fortawesome/free-solid-svg-icons';\n\nclass SocketLoader extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"vw-100 vh-100 d-flex align-items-center justify-content-center\">\n        {this.props.error ? (\n          <div className=\"text-center\">\n            <div className=\"bg-danger p-4\">\n              <div>\n                <FontAwesomeIcon icon={faBomb} size=\"4x\" />\n              </div>\n              <h5 className=\"text-white-50 mt-2 mb-0\">\n                Error {this.props.error}\n              </h5>\n            </div>\n            <div className=\"bg-white p-4\">\n              Could not connect to server. Please try again later.\n            </div>\n          </div>\n        ) : (\n          <React.Fragment>\n            <Spinner\n              color=\"primary\"\n              type=\"grow\"\n              style={{ width: '5rem', height: '5rem' }}\n            />\n            <Spinner\n              color=\"primary\"\n              type=\"grow\"\n              style={{ width: '5rem', height: '5rem' }}\n            />\n            <Spinner\n              color=\"primary\"\n              type=\"grow\"\n              style={{ width: '5rem', height: '5rem' }}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n  error: store.socket.error,\n}))(SocketLoader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport { history } from './store';\nimport { connect as connectSocket } from './socket';\nimport Landing from './components/landing';\nimport Dashboard from './components/dashboard';\nimport Summary from './components/summary';\nimport Breakdown from './components/breakdown';\nimport SocketLoader from './components/SocketLoader';\n\nimport './styles/theme.scss';\n\nclass App extends React.PureComponent {\n  componentDidMount() {\n    connectSocket();\n  }\n\n  render() {\n    if (this.props.ready) {\n      return (\n        <Router history={history}>\n          <div className=\"bg-dark\">\n            <Switch>\n              <Route exact path=\"/\" component={Landing} />\n              <Route path=\"/dash\" component={Dashboard} />\n              <Route path=\"/summary\" component={Summary} />\n              <Route path=\"/breakdown\" component={Breakdown} />\n            </Switch>\n          </div>\n        </Router>\n      );\n    }\n    return <SocketLoader />;\n  }\n}\n\nexport default connect(store => ({\n  ready: store.socket.open,\n}))(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}